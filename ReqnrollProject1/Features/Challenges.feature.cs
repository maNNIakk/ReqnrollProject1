// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:3.0.0.0
//      Reqnroll Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace ReqnrollProject1.Features
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "3.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ChallengesFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "Features", "Challenges", null, global::Reqnroll.ProgrammingLanguage.CSharp, featureTags, InitializeCucumberMessages());
        
#line 1 "Challenges.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute(Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior.EndOfClass)]
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
            await global::Reqnroll.TestRunnerManager.ReleaseFeatureAsync(featureInfo);
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo, global::Reqnroll.RuleInfo ruleInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo, ruleInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        private static global::Io.Cucumber.Messages.Types.Source SourceFunc()
        {
            return new global::Io.Cucumber.Messages.Types.Source("Features/Challenges.feature", @"Feature: Challenges

Scenario: UserType Challenge
Given I have the following users
| UserName | UserType      |
| Alice    | admin         |
| Bob      | user          |
| John     | guest         |
| Sally    | user          |
| Magnus   | administrator |
|          | manager       |
|          | cybersecurity |
Then the internal user type for users is 
| UserName | UserType |
| Alice    | Admin    |
| Bob      | User     |
| John     | Guest    |
| Sally    | User     |
| Magnus   | Admin    |
|          | Unknown  |
|          | Unknown  |

Scenario: Geolocation Challenge
Given I have the following stores
| StoreName | GeoLocation |
| US-Store  | 3.14,5.43   |
| UK-Store  | 3.29,4.56   |
| DE-Store  | 4.12,6.78   |
Then the correspondent GeoLocation from stores are
| StoreName | Latitude | Longitude |
| US-Store  | 3.14     | 5.43      |
| UK-Store  | 3.29     | 4.56      |
| DE-Store  | 4.12     | 6.78      |
", global::Io.Cucumber.Messages.Types.SourceMediaType.TEXT_X_CUCUMBER_GHERKIN_PLAIN);
        }
        
        private static global::Io.Cucumber.Messages.Types.GherkinDocument GherkinDocumentFunc()
        {
            return new global::Io.Cucumber.Messages.Types.GherkinDocument("Features/Challenges.feature", new global::Io.Cucumber.Messages.Types.Feature(new global::Io.Cucumber.Messages.Types.Location(1, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "en-US", "Feature", "Challenges", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.FeatureChild>(new global::Io.Cucumber.Messages.Types.FeatureChild[] {
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(3, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "UserType Challenge", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(4, new System.Nullable<long>(1)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have the following users", null, new global::Io.Cucumber.Messages.Types.DataTable(new global::Io.Cucumber.Messages.Types.Location(5, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(5, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(5, new System.Nullable<long>(3)), "UserName"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(5, new System.Nullable<long>(14)), "UserType")}), "2653464596d77f54a4fd5cf09803a45e"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(3)), "Alice"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(14)), "admin")}), "eed17d167ce7685994f4abaaa4907427"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(7, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(7, new System.Nullable<long>(3)), "Bob"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(7, new System.Nullable<long>(14)), "user")}), "bcdf3029789f475c81326cdf48438c47"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(3)), "John"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(14)), "guest")}), "f12e067802f9905cab4b272472f84744"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(3)), "Sally"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(14)), "user")}), "5aa69aafb8eb7759995f44e0c9c6af37"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(10, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(10, new System.Nullable<long>(3)), "Magnus"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(10, new System.Nullable<long>(14)), "administrator")}), "c53dff680a3a8b5082753d038f5de947"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(11, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(11, new System.Nullable<long>(12)), ""),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(11, new System.Nullable<long>(14)), "manager")}), "cb74596d43b6935b9bcc26349fcf23eb"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(12, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(12, new System.Nullable<long>(12)), ""),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(12, new System.Nullable<long>(14)), "cybersecurity")}), "a97fd3a0c4b3855ea2c190aa7d38250b")})), "e509a7d4bdcdd45389a1fcbd1b2ec112"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(13, new System.Nullable<long>(1)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the internal user type for users is", null, new global::Io.Cucumber.Messages.Types.DataTable(new global::Io.Cucumber.Messages.Types.Location(14, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(14, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(14, new System.Nullable<long>(3)), "UserName"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(14, new System.Nullable<long>(14)), "UserType")}), "bff24781f394b758a8428392c1e6b588"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(15, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(15, new System.Nullable<long>(3)), "Alice"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(15, new System.Nullable<long>(14)), "Admin")}), "2703788babf4435ba7abb201c2ec22d5"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(16, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(16, new System.Nullable<long>(3)), "Bob"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(16, new System.Nullable<long>(14)), "User")}), "1595d458d3de3457b1834a9c45d0ff44"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(17, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(17, new System.Nullable<long>(3)), "John"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(17, new System.Nullable<long>(14)), "Guest")}), "9e1621fdb7f8965ba51660a4672e7010"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(3)), "Sally"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(14)), "User")}), "d099aca49af4fa518814708efed1f50f"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(3)), "Magnus"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(14)), "Admin")}), "4280bd3a264a6f56b89f63c3acbc89ce"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(12)), ""),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(14)), "Unknown")}), "eb32ea2ab46b1f59a788ede40c1af6c2"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(12)), ""),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(14)), "Unknown")}), "c6ef9762b14e7d5098630da1043d3543")})), "17535e5d0d31835fbb9d6d5f5b3df2c3")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "f800567b73f39c57a9e849921f794729")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(23, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "Geolocation Challenge", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(24, new System.Nullable<long>(1)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have the following stores", null, new global::Io.Cucumber.Messages.Types.DataTable(new global::Io.Cucumber.Messages.Types.Location(25, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(25, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(25, new System.Nullable<long>(3)), "StoreName"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(25, new System.Nullable<long>(15)), "GeoLocation")}), "9a1f3e4b0bb9b05aa18c9937a729f800"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(26, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(26, new System.Nullable<long>(3)), "US-Store"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(26, new System.Nullable<long>(15)), "3.14,5.43")}), "ba5329a0457a785787bf0d217933add1"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(3)), "UK-Store"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(15)), "3.29,4.56")}), "6ed0347690615b54bf8b3e15fd19ebb3"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(3)), "DE-Store"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(15)), "4.12,6.78")}), "8c7a58ea6039ae51a45c69f6d4776fcd")})), "5fe19a5af517c25798f81c52bb30d0b5"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(1)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the correspondent GeoLocation from stores are", null, new global::Io.Cucumber.Messages.Types.DataTable(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(3)), "StoreName"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(15)), "Latitude"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(26)), "Longitude")}), "050ccaefaad97e5496046ad07f6f575a"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(3)), "US-Store"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(15)), "3.14"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(26)), "5.43")}), "0506adab47c8b55eab0becbf9b45e488"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(3)), "UK-Store"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(15)), "3.29"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(26)), "4.56")}), "9c6f308dde36ef599697d7584a9752a4"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(33, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(33, new System.Nullable<long>(3)), "DE-Store"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(33, new System.Nullable<long>(15)), "4.12"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(33, new System.Nullable<long>(26)), "6.78")}), "a7f722beb2f6655aba5e77b6cb387473")})), "be593dd3c890dd54a8c6d718992bcafe")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "1da315bd89b035509533792a04f34396"))})), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Comment>(new global::Io.Cucumber.Messages.Types.Comment[0]));
        }
        
        private static global::System.Collections.Generic.IEnumerable<Io.Cucumber.Messages.Types.Pickle> PicklesFunc()
        {
            return new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Pickle>(new global::Io.Cucumber.Messages.Types.Pickle[] {
                        new global::Io.Cucumber.Messages.Types.Pickle("d3d7b81dd009b85a97d7c12dc527cfc8", "Features/Challenges.feature", "UserType Challenge", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("UserName"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("UserType")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Alice"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("admin")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Bob"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("user")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("John"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("guest")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Sally"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("user")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Magnus"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("administrator")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell(""),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("manager")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell(""),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("cybersecurity")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "e509a7d4bdcdd45389a1fcbd1b2ec112"}), "70f43e5cf3922c51b798d7a07ac1992f", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have the following users"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("UserName"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("UserType")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Alice"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Admin")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Bob"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("User")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("John"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Guest")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Sally"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("User")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Magnus"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Admin")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell(""),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Unknown")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell(""),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Unknown")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "17535e5d0d31835fbb9d6d5f5b3df2c3"}), "d73befe69fc45655a3bfe4f7d7ceb48e", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the internal user type for users is")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[0]), new System.Collections.Generic.List<string>(new string[] {
                                        "f800567b73f39c57a9e849921f794729"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("18f21fbc9111d9579584a11608498e4e", "Features/Challenges.feature", "Geolocation Challenge", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("StoreName"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("GeoLocation")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("US-Store"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3.14,5.43")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("UK-Store"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3.29,4.56")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("DE-Store"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4.12,6.78")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "5fe19a5af517c25798f81c52bb30d0b5"}), "12beb7509f95f75995231432c8d0cacc", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have the following stores"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("StoreName"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Latitude"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Longitude")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("US-Store"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3.14"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("5.43")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("UK-Store"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3.29"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4.56")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("DE-Store"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4.12"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("6.78")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "be593dd3c890dd54a8c6d718992bcafe"}), "cc83889c458a0452b8a3c053af092991", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the correspondent GeoLocation from stores are")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[0]), new System.Collections.Generic.List<string>(new string[] {
                                        "1da315bd89b035509533792a04f34396"}))});
        }
        
        private static global::Reqnroll.Formatters.RuntimeSupport.FeatureLevelCucumberMessages InitializeCucumberMessages()
        {
            return new global::Reqnroll.Formatters.RuntimeSupport.FeatureLevelCucumberMessages(new global::System.Func<Io.Cucumber.Messages.Types.Source>(ChallengesFeature.SourceFunc), new global::System.Func<Io.Cucumber.Messages.Types.GherkinDocument>(ChallengesFeature.GherkinDocumentFunc), new global::System.Func<System.Collections.Generic.IEnumerable<Io.Cucumber.Messages.Types.Pickle>>(ChallengesFeature.PicklesFunc));
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute("UserType Challenge")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("UserType Challenge")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Challenges")]
        public async global::System.Threading.Tasks.Task UserTypeChallenge()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "0";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("UserType Challenge", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 3
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
                global::Reqnroll.Table table1 = new global::Reqnroll.Table(new string[] {
                            "UserName",
                            "UserType"});
                table1.AddRow(new string[] {
                            "Alice",
                            "admin"});
                table1.AddRow(new string[] {
                            "Bob",
                            "user"});
                table1.AddRow(new string[] {
                            "John",
                            "guest"});
                table1.AddRow(new string[] {
                            "Sally",
                            "user"});
                table1.AddRow(new string[] {
                            "Magnus",
                            "administrator"});
                table1.AddRow(new string[] {
                            "",
                            "manager"});
                table1.AddRow(new string[] {
                            "",
                            "cybersecurity"});
#line 4
await testRunner.GivenAsync("I have the following users", ((string)(null)), table1, "Given ");
#line hidden
                global::Reqnroll.Table table2 = new global::Reqnroll.Table(new string[] {
                            "UserName",
                            "UserType"});
                table2.AddRow(new string[] {
                            "Alice",
                            "Admin"});
                table2.AddRow(new string[] {
                            "Bob",
                            "User"});
                table2.AddRow(new string[] {
                            "John",
                            "Guest"});
                table2.AddRow(new string[] {
                            "Sally",
                            "User"});
                table2.AddRow(new string[] {
                            "Magnus",
                            "Admin"});
                table2.AddRow(new string[] {
                            "",
                            "Unknown"});
                table2.AddRow(new string[] {
                            "",
                            "Unknown"});
#line 13
await testRunner.ThenAsync("the internal user type for users is", ((string)(null)), table2, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute("Geolocation Challenge")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Geolocation Challenge")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Challenges")]
        public async global::System.Threading.Tasks.Task GeolocationChallenge()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "1";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Geolocation Challenge", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 23
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
                global::Reqnroll.Table table3 = new global::Reqnroll.Table(new string[] {
                            "StoreName",
                            "GeoLocation"});
                table3.AddRow(new string[] {
                            "US-Store",
                            "3.14,5.43"});
                table3.AddRow(new string[] {
                            "UK-Store",
                            "3.29,4.56"});
                table3.AddRow(new string[] {
                            "DE-Store",
                            "4.12,6.78"});
#line 24
await testRunner.GivenAsync("I have the following stores", ((string)(null)), table3, "Given ");
#line hidden
                global::Reqnroll.Table table4 = new global::Reqnroll.Table(new string[] {
                            "StoreName",
                            "Latitude",
                            "Longitude"});
                table4.AddRow(new string[] {
                            "US-Store",
                            "3.14",
                            "5.43"});
                table4.AddRow(new string[] {
                            "UK-Store",
                            "3.29",
                            "4.56"});
                table4.AddRow(new string[] {
                            "DE-Store",
                            "4.12",
                            "6.78"});
#line 29
await testRunner.ThenAsync("the correspondent GeoLocation from stores are", ((string)(null)), table4, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
