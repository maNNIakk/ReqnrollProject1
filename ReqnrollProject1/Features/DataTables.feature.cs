// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:3.0.0.0
//      Reqnroll Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace ReqnrollProject1.Features
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "3.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DataTablesFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "Features", "DataTables", null, global::Reqnroll.ProgrammingLanguage.CSharp, featureTags, InitializeCucumberMessages());
        
#line 1 "DataTables.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute(Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior.EndOfClass)]
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
            await global::Reqnroll.TestRunnerManager.ReleaseFeatureAsync(featureInfo);
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo, global::Reqnroll.RuleInfo ruleInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo, ruleInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        public virtual async global::System.Threading.Tasks.Task FeatureBackgroundAsync()
        {
#line 4
#line hidden
            global::Reqnroll.Table table5 = new global::Reqnroll.Table(new string[] {
                        "ProductId",
                        "Stock",
                        "Basket"});
            table5.AddRow(new string[] {
                        "1",
                        "2",
                        "0"});
            table5.AddRow(new string[] {
                        "2",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "3",
                        "2",
                        "1"});
            table5.AddRow(new string[] {
                        "4",
                        "5",
                        "1"});
#line 5
 await testRunner.GivenAsync("I have the following data", ((string)(null)), table5, "Given ");
#line hidden
        }
        
        private static global::Io.Cucumber.Messages.Types.Source SourceFunc()
        {
            return new global::Io.Cucumber.Messages.Types.Source("Features/DataTables.feature", "Feature: DataTables\r\n\r\n\r\nBackground: \r\n\tGiven I have the following data\r\n\t\t| Prod" +
                    "uctId | Stock | Basket |\r\n\t\t| 1         | 2     | 0      |\r\n\t\t| 2         | 0   " +
                    "  | 0      |\r\n\t\t| 3         | 2     | 1      |\r\n\t\t| 4         | 5     | 1      |" +
                    "\r\n\r\nScenario Outline:  Testing funcionality of basket\r\n\tGiven I am on the produc" +
                    "t detail page of product <ProductId>\r\n\tWhen I click the Add to Basket button\r\n\tT" +
                    "hen the quantities are stock level of <Stock> and basket qty of <Basket>\r\n    An" +
                    "d a message <Message> is displayed to the customer\r\n\tExamples:\r\n\t| Description  " +
                    "     | ProductId | Stock | Basket | Message             |\r\n\t| In Stock          " +
                    "| 1         | 1     | 1      | \'Added to basket\'   |\r\n\t| Out of Stock      | 2  " +
                    "       | 0     | 0      | \'Out of stock\'      |\r\n\t| Already in Basket | 3       " +
                    "  | 2     | 1      | \'Already in basket\' |\r\n\r\nScenario: Testing Remove Item from" +
                    " Basket\r\n\tGiven I am on the basket page\r\n\tWhen I remove Product Id 3 from basket" +
                    "\r\n\tAnd I remove Product Id 4 from basket\r\n\tThen the quantities are\r\n\t| Product I" +
                    "d | Stock | Basket |\r\n\t| 1          | 2     | 0      |\r\n\t| 2          | 0     | " +
                    "0      |\r\n\t| 3          | 3     | 0      |\r\n\t| 4          | 6     | 0      |\r\n\r\n" +
                    "\tScenario: Customer can add offer code to the basket\r\n\r\n\tGiven I have the follow" +
                    "ing offer codes\r\n\t| OfferCode | ExpiryDate | OfferCodeType | IsValid |\r\n\t| CODE1" +
                    "     | 06/20/2025 | ByDate        | Yes     |\r\n\t| CODE2     | 06/05/2025 | ByDat" +
                    "e        | No      |\r\n\tAnd today is \'06/04/2025\'\r\n\tWhen I add offer code \'CODE1\'" +
                    " to the basket\r\n\tThen the offer code is valid", global::Io.Cucumber.Messages.Types.SourceMediaType.TEXT_X_CUCUMBER_GHERKIN_PLAIN);
        }
        
        private static global::Io.Cucumber.Messages.Types.GherkinDocument GherkinDocumentFunc()
        {
            return new global::Io.Cucumber.Messages.Types.GherkinDocument("Features/DataTables.feature", new global::Io.Cucumber.Messages.Types.Feature(new global::Io.Cucumber.Messages.Types.Location(1, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "en-US", "Feature", "DataTables", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.FeatureChild>(new global::Io.Cucumber.Messages.Types.FeatureChild[] {
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, new global::Io.Cucumber.Messages.Types.Background(new global::Io.Cucumber.Messages.Types.Location(4, new System.Nullable<long>(1)), "Background", "", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(5, new System.Nullable<long>(2)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have the following data", null, new global::Io.Cucumber.Messages.Types.DataTable(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(3)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(3)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(5)), "ProductId"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(17)), "Stock"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(25)), "Basket")}), "d871fa55e724a4508945282ff3a9fc73"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(7, new System.Nullable<long>(3)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(7, new System.Nullable<long>(5)), "1"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(7, new System.Nullable<long>(17)), "2"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(7, new System.Nullable<long>(25)), "0")}), "63e535f04723055a961a4b09b59fd59a"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(3)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(5)), "2"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(17)), "0"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(25)), "0")}), "c519c79e782d8652a86262a3f53c99f3"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(3)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(5)), "3"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(17)), "2"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(25)), "1")}), "d10bd6702fa69c548af493ac7d48a7f1"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(10, new System.Nullable<long>(3)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(10, new System.Nullable<long>(5)), "4"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(10, new System.Nullable<long>(17)), "5"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(10, new System.Nullable<long>(25)), "1")}), "eb9ee478a12a8e54a3cd4bff5ae2762d")})), "6ae20565b0a6645bb9d5e37bceb87abb")}), "67fa3641b1ffbe55bc580a750b5d0e2e"), null),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(12, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario Outline", "Testing funcionality of basket", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(13, new System.Nullable<long>(2)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I am on the product detail page of product <ProductId>", null, null, "b84a52177fb5025e985783af4885e6d2"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(14, new System.Nullable<long>(2)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I click the Add to Basket button", null, null, "44fb08bb644a3353a7d279211328432c"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(15, new System.Nullable<long>(2)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the quantities are stock level of <Stock> and basket qty of <Basket>", null, null, "7780aee9fce4a85a951dc6e2b90d862a"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(16, new System.Nullable<long>(5)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "a message <Message> is displayed to the customer", null, null, "855d72956ffb75549634b910810b7ac0")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[] {
                                                    new global::Io.Cucumber.Messages.Types.Examples(new global::Io.Cucumber.Messages.Types.Location(17, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Examples", "", "", new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(4)), "Description"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(24)), "ProductId"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(36)), "Stock"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(44)), "Basket"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(53)), "Message")}), "88b1eecc1798a359ab6b43f4eb606f6f"), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(4)), "In Stock"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(24)), "1"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(36)), "1"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(44)), "1"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(53)), "\'Added to basket\'")}), "c6eea31008d3d55eb8968ddb185eed79"),
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(4)), "Out of Stock"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(24)), "2"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(36)), "0"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(44)), "0"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(53)), "\'Out of stock\'")}), "9919857278816b5b94064e412fbe3c3b"),
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(4)), "Already in Basket"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(24)), "3"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(36)), "2"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(44)), "1"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(53)), "\'Already in basket\'")}), "fe793b2934b0be509305292b03f9c862")}), "499b61565642315d98b64d88b80a925d")}), "aea4ca8c8c78c552b60511b814b6e63d")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(23, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "Testing Remove Item from Basket", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(24, new System.Nullable<long>(2)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I am on the basket page", null, null, "8ac83ecdfbe0f45382507b78b6d9e4c6"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(25, new System.Nullable<long>(2)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I remove Product Id 3 from basket", null, null, "27740d022be7ad57bbd81042ace6c457"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(26, new System.Nullable<long>(2)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "I remove Product Id 4 from basket", null, null, "9a47312da9046e5898fa2480c4eab635"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(2)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the quantities are", null, new global::Io.Cucumber.Messages.Types.DataTable(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(4)), "Product Id"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(17)), "Stock"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(25)), "Basket")}), "d7813ca0f2590c55aecaab968e5c2073"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(4)), "1"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(17)), "2"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(25)), "0")}), "171584cb881528518a34f40c3191dd0e"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(4)), "2"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(17)), "0"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(30, new System.Nullable<long>(25)), "0")}), "d59d54583e61fe5ab2353eb0114936ae"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(4)), "3"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(17)), "3"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(25)), "0")}), "9b21e2cd0d348153a20496489884582d"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(4)), "4"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(17)), "6"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(25)), "0")}), "77998dc0e15aa8598474dd0c85e36889")})), "f441078469803f59a5daabf8bbf3719c")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "b4374f4b19bc8e59a07617c74c281aa2")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(34, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "Customer can add offer code to the basket", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(36, new System.Nullable<long>(2)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have the following offer codes", null, new global::Io.Cucumber.Messages.Types.DataTable(new global::Io.Cucumber.Messages.Types.Location(37, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(37, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(37, new System.Nullable<long>(4)), "OfferCode"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(37, new System.Nullable<long>(16)), "ExpiryDate"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(37, new System.Nullable<long>(29)), "OfferCodeType"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(37, new System.Nullable<long>(45)), "IsValid")}), "04faa7db35c16a56a9d6c92f85cf5637"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(38, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(38, new System.Nullable<long>(4)), "CODE1"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(38, new System.Nullable<long>(16)), "06/20/2025"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(38, new System.Nullable<long>(29)), "ByDate"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(38, new System.Nullable<long>(45)), "Yes")}), "6d27b4a540429c53b3b9c22ef940aff1"),
                                                                        new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(39, new System.Nullable<long>(2)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(39, new System.Nullable<long>(4)), "CODE2"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(39, new System.Nullable<long>(16)), "06/05/2025"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(39, new System.Nullable<long>(29)), "ByDate"),
                                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(39, new System.Nullable<long>(45)), "No")}), "c8e9121a4bd85e5b8876f9a61ab22108")})), "199ff0991ebc355aa9a4bf49d5e3817f"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(40, new System.Nullable<long>(2)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "today is \'06/04/2025\'", null, null, "e6a3a2540f8da75994d1727b26b12905"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(41, new System.Nullable<long>(2)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I add offer code \'CODE1\' to the basket", null, null, "e64a3d6914a1125b8f73f4ec95abe048"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(42, new System.Nullable<long>(2)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the offer code is valid", null, null, "78c518392f61335394f366218c1413c7")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "3029a74e94df6b5180931f33c42c084b"))})), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Comment>(new global::Io.Cucumber.Messages.Types.Comment[0]));
        }
        
        private static global::System.Collections.Generic.IEnumerable<Io.Cucumber.Messages.Types.Pickle> PicklesFunc()
        {
            return new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Pickle>(new global::Io.Cucumber.Messages.Types.Pickle[] {
                        new global::Io.Cucumber.Messages.Types.Pickle("391f3edee3c5cd5db8ec83f8a4948bf2", "Features/DataTables.feature", "Testing funcionality of basket", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("ProductId"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Stock"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Basket")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("5"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "6ae20565b0a6645bb9d5e37bceb87abb"}), "459002b38bb132569bb2c7bdd998dcd8", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have the following data"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "b84a52177fb5025e985783af4885e6d2",
                                                        "c6eea31008d3d55eb8968ddb185eed79"}), "0b812a0cc8cd565098f09497507b915f", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I am on the product detail page of product 1"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "44fb08bb644a3353a7d279211328432c",
                                                        "c6eea31008d3d55eb8968ddb185eed79"}), "52a151858e9e535a9e72abc6cb37e07b", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I click the Add to Basket button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "7780aee9fce4a85a951dc6e2b90d862a",
                                                        "c6eea31008d3d55eb8968ddb185eed79"}), "eaac8fc122168e5cb6f3754c4f65a6ab", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the quantities are stock level of 1 and basket qty of 1"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "855d72956ffb75549634b910810b7ac0",
                                                        "c6eea31008d3d55eb8968ddb185eed79"}), "414cc2dde803e85099cd348cad6d69b5", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "a message \'Added to basket\' is displayed to the customer")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[0]), new System.Collections.Generic.List<string>(new string[] {
                                        "aea4ca8c8c78c552b60511b814b6e63d",
                                        "c6eea31008d3d55eb8968ddb185eed79"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("c6502ef0324dd85e8f4c93a4b11b4e54", "Features/DataTables.feature", "Testing funcionality of basket", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("ProductId"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Stock"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Basket")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("5"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "6ae20565b0a6645bb9d5e37bceb87abb"}), "112de046bd31f95a81a9c69b3cca8d1c", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have the following data"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "b84a52177fb5025e985783af4885e6d2",
                                                        "9919857278816b5b94064e412fbe3c3b"}), "1efdd7ec9d58c05fb909fc5f22808357", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I am on the product detail page of product 2"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "44fb08bb644a3353a7d279211328432c",
                                                        "9919857278816b5b94064e412fbe3c3b"}), "545b3a9bd6097b569233db9753242943", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I click the Add to Basket button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "7780aee9fce4a85a951dc6e2b90d862a",
                                                        "9919857278816b5b94064e412fbe3c3b"}), "4c49a1d096948858b6bae8130226ffc1", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the quantities are stock level of 0 and basket qty of 0"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "855d72956ffb75549634b910810b7ac0",
                                                        "9919857278816b5b94064e412fbe3c3b"}), "94533fa2ded7c253844887151723de2e", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "a message \'Out of stock\' is displayed to the customer")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[0]), new System.Collections.Generic.List<string>(new string[] {
                                        "aea4ca8c8c78c552b60511b814b6e63d",
                                        "9919857278816b5b94064e412fbe3c3b"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("6c720d0457506e5c9f37a12b8d4b7dba", "Features/DataTables.feature", "Testing funcionality of basket", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("ProductId"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Stock"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Basket")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("5"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "6ae20565b0a6645bb9d5e37bceb87abb"}), "db9ea6c527163b55b244f55e5ab0bb39", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have the following data"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "b84a52177fb5025e985783af4885e6d2",
                                                        "fe793b2934b0be509305292b03f9c862"}), "807f773e21c9a45a8897761785d98b5f", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I am on the product detail page of product 3"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "44fb08bb644a3353a7d279211328432c",
                                                        "fe793b2934b0be509305292b03f9c862"}), "dede104382263d56ae37736d603d724b", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I click the Add to Basket button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "7780aee9fce4a85a951dc6e2b90d862a",
                                                        "fe793b2934b0be509305292b03f9c862"}), "bf218924871c145ea95549e007a5f1fc", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the quantities are stock level of 2 and basket qty of 1"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "855d72956ffb75549634b910810b7ac0",
                                                        "fe793b2934b0be509305292b03f9c862"}), "9894f8c2048f6d5b976c2e13566a2f99", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "a message \'Already in basket\' is displayed to the customer")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[0]), new System.Collections.Generic.List<string>(new string[] {
                                        "aea4ca8c8c78c552b60511b814b6e63d",
                                        "fe793b2934b0be509305292b03f9c862"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("1a135fafb3b4fc51a4176b7fae4da459", "Features/DataTables.feature", "Testing Remove Item from Basket", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("ProductId"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Stock"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Basket")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("5"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "6ae20565b0a6645bb9d5e37bceb87abb"}), "634d2b91406ed759a43de1cf81476682", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have the following data"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "8ac83ecdfbe0f45382507b78b6d9e4c6"}), "1c22df7ec1e63d58adccc21fd2d9c74e", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I am on the basket page"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "27740d022be7ad57bbd81042ace6c457"}), "88cbf0d35b1d205e8a180d810ec19587", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I remove Product Id 3 from basket"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "9a47312da9046e5898fa2480c4eab635"}), "b69c79bf9e36145bb3b46675f9f8d556", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I remove Product Id 4 from basket"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Product Id"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Stock"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Basket")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("6"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "f441078469803f59a5daabf8bbf3719c"}), "f95c1d1ca3cee95899803f4353c17912", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the quantities are")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[0]), new System.Collections.Generic.List<string>(new string[] {
                                        "b4374f4b19bc8e59a07617c74c281aa2"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("23cc5d36b0d424579bd439baafc88f21", "Features/DataTables.feature", "Customer can add offer code to the basket", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("ProductId"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Stock"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Basket")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("0")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("3"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("4"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("5"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("1")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "6ae20565b0a6645bb9d5e37bceb87abb"}), "3483dd7588f86651978c99dafdd7ca9b", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have the following data"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(new global::Io.Cucumber.Messages.Types.PickleStepArgument(null, new global::Io.Cucumber.Messages.Types.PickleTable(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableRow>(new global::Io.Cucumber.Messages.Types.PickleTableRow[] {
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("OfferCode"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("ExpiryDate"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("OfferCodeType"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("IsValid")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("CODE1"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("06/20/2025"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("ByDate"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("Yes")})),
                                                                new global::Io.Cucumber.Messages.Types.PickleTableRow(new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTableCell>(new global::Io.Cucumber.Messages.Types.PickleTableCell[] {
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("CODE2"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("06/05/2025"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("ByDate"),
                                                                                new global::Io.Cucumber.Messages.Types.PickleTableCell("No")}))}))), new System.Collections.Generic.List<string>(new string[] {
                                                        "199ff0991ebc355aa9a4bf49d5e3817f"}), "738e7c3db7b55c5db8f218c6a5ba3151", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have the following offer codes"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "e6a3a2540f8da75994d1727b26b12905"}), "7853940ba28c78538c48b4abd2f3c81c", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "today is \'06/04/2025\'"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "e64a3d6914a1125b8f73f4ec95abe048"}), "8dcc5d9e8ad213578c61fe9b6365c0c0", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I add offer code \'CODE1\' to the basket"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "78c518392f61335394f366218c1413c7"}), "88e5c25c99b137579dcfd6c0ccd6413a", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the offer code is valid")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[0]), new System.Collections.Generic.List<string>(new string[] {
                                        "3029a74e94df6b5180931f33c42c084b"}))});
        }
        
        private static global::Reqnroll.Formatters.RuntimeSupport.FeatureLevelCucumberMessages InitializeCucumberMessages()
        {
            return new global::Reqnroll.Formatters.RuntimeSupport.FeatureLevelCucumberMessages(new global::System.Func<Io.Cucumber.Messages.Types.Source>(DataTablesFeature.SourceFunc), new global::System.Func<Io.Cucumber.Messages.Types.GherkinDocument>(DataTablesFeature.GherkinDocumentFunc), new global::System.Func<System.Collections.Generic.IEnumerable<Io.Cucumber.Messages.Types.Pickle>>(DataTablesFeature.PicklesFunc));
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute("Testing funcionality of basket")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Testing funcionality of basket")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DataTables")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute("In Stock", "1", "1", "1", "\'Added to basket\'", "0", null, DisplayName="Testing funcionality of basket(In Stock,1,1,1,\'Added to basket\',0)")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute("Out of Stock", "2", "0", "0", "\'Out of stock\'", "1", null, DisplayName="Testing funcionality of basket(Out of Stock,2,0,0,\'Out of stock\',1)")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute("Already in Basket", "3", "2", "1", "\'Already in basket\'", "2", null, DisplayName="Testing funcionality of basket(Already in Basket,3,2,1,\'Already in basket\',2)")]
        public async global::System.Threading.Tasks.Task TestingFuncionalityOfBasket(string description, string productId, string stock, string basket, string message, string @__pickleIndex, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Description", description);
            argumentsOfScenario.Add("ProductId", productId);
            argumentsOfScenario.Add("Stock", stock);
            argumentsOfScenario.Add("Basket", basket);
            argumentsOfScenario.Add("Message", message);
            string pickleIndex = @__pickleIndex;
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Testing funcionality of basket", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 12
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 4
await this.FeatureBackgroundAsync();
#line hidden
#line 13
 await testRunner.GivenAsync(string.Format("I am on the product detail page of product {0}", productId), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 14
 await testRunner.WhenAsync("I click the Add to Basket button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 15
 await testRunner.ThenAsync(string.Format("the quantities are stock level of {0} and basket qty of {1}", stock, basket), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 16
    await testRunner.AndAsync(string.Format("a message {0} is displayed to the customer", message), ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute("Testing Remove Item from Basket")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Testing Remove Item from Basket")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DataTables")]
        public async global::System.Threading.Tasks.Task TestingRemoveItemFromBasket()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "3";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Testing Remove Item from Basket", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 23
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 4
await this.FeatureBackgroundAsync();
#line hidden
#line 24
 await testRunner.GivenAsync("I am on the basket page", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 25
 await testRunner.WhenAsync("I remove Product Id 3 from basket", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 26
 await testRunner.AndAsync("I remove Product Id 4 from basket", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table6 = new global::Reqnroll.Table(new string[] {
                            "Product Id",
                            "Stock",
                            "Basket"});
                table6.AddRow(new string[] {
                            "1",
                            "2",
                            "0"});
                table6.AddRow(new string[] {
                            "2",
                            "0",
                            "0"});
                table6.AddRow(new string[] {
                            "3",
                            "3",
                            "0"});
                table6.AddRow(new string[] {
                            "4",
                            "6",
                            "0"});
#line 27
 await testRunner.ThenAsync("the quantities are", ((string)(null)), table6, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute("Customer can add offer code to the basket")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Customer can add offer code to the basket")]
        [global::Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DataTables")]
        public async global::System.Threading.Tasks.Task CustomerCanAddOfferCodeToTheBasket()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "4";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Customer can add offer code to the basket", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 34
 this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 4
await this.FeatureBackgroundAsync();
#line hidden
                global::Reqnroll.Table table7 = new global::Reqnroll.Table(new string[] {
                            "OfferCode",
                            "ExpiryDate",
                            "OfferCodeType",
                            "IsValid"});
                table7.AddRow(new string[] {
                            "CODE1",
                            "06/20/2025",
                            "ByDate",
                            "Yes"});
                table7.AddRow(new string[] {
                            "CODE2",
                            "06/05/2025",
                            "ByDate",
                            "No"});
#line 36
 await testRunner.GivenAsync("I have the following offer codes", ((string)(null)), table7, "Given ");
#line hidden
#line 40
 await testRunner.AndAsync("today is \'06/04/2025\'", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 41
 await testRunner.WhenAsync("I add offer code \'CODE1\' to the basket", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 42
 await testRunner.ThenAsync("the offer code is valid", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
